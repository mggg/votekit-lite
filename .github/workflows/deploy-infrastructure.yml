name: Deploy Infrastructure

on:
  push:
    branches: [ main ]
    paths:
      - 'infra/**'
      - 'lambda/**'
      - 'docker-compose.yml'
  workflow_dispatch: # Allow manual triggering

env:
  AWS_REGION: us-east-2
  PULUMI_BACKEND_BUCKET: votekit-frontend-pulumi-backend

jobs:
  deploy-infrastructure:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        platforms: linux/arm64,linux/amd64
      
    - name: Build infrastructure container
      run: |
        docker build -t votekit-infra ./infra
        
    - name: Configure AWS credentials
      run: |
        echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> ./infra/.env
        echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> ./infra/.env
        echo "AWS_REGION=${{ env.AWS_REGION }}" >> ./infra/.env
        
    - name: Build and push Lambda Docker image
      run: |
        # Set AWS credentials for the build script
        export AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}"
        export AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}"
        export AWS_REGION="${{ env.AWS_REGION }}"
        export AWS_ACCOUNT_ID="${{ secrets.AWS_ACCOUNT_ID }}"
        
        # Make the script executable and run it
        chmod +x ./build-and-push-lambda.sh
        ./build-and-push-lambda.sh
        
        echo "âœ… Lambda Docker image built and pushed successfully!"
    
    - name: Deploy infrastructure with Pulumi
      run: |
        docker run --rm \
          -v "$(pwd):/workspace" \
          -v "/var/run/docker.sock:/var/run/docker.sock" \
          --env-file ./infra/.env \
          -e PULUMI_HOME=/workspace/infra/.pulumi \
          -e AWS_ACCOUNT_ID=${{secrets.AWS_ACCOUNT_ID}}
          -e AWS_ACCESS_KEY_ID=${{secrets.AWS_ACCESS_KEY_ID}}
          -e AWS_SECRET_ACCESS_KEY=${{secrets.AWS_SECRET_ACCESS_KEY}}
          -e AWS_REGION=${{secrets.AWS_REGION}}
          -e PULUMI_CONFIG_PASSPHRASE=${{ secrets.PULUMI_CONFIG_PASSPHRASE }}

          -w /workspace/infra \
          votekit-infra \
          sh -c "pulumi login s3://${{ env.PULUMI_BACKEND_BUCKET }} && (pulumi stack select dev || pulumi stack init dev) && pulumi up --yes --stack dev"
          
    - name: Clean up environment file
      if: always()
      run: |
        rm -f ./infra/.env
        
    - name: Output deployment results
      if: success()
      run: |
        echo "âœ… Infrastructure deployment completed successfully!"
        echo "ðŸ”— Lambda Function ARN: Check Pulumi outputs in the S3 backend"
        echo "ðŸª£ Pulumi Backend Bucket: ${{ env.PULUMI_BACKEND_BUCKET }}"
