services:
  app:
    build:
      context: ./app
      dockerfile: Dockerfile.dev
    container_name: votekit-app
    command: sh -c "pnpm i && pnpm dev --host 0.0.0.0 --port 5173"
    volumes:
      - ./app:/app
    ports:
      - "5173:5173"
    environment:
      - NODE_ENV=production
      - HOST=0.0.0.0
      - PORT=5173
      - CI=true
    depends_on:
      - lambda

  lambda:
    build:
      context: ./lambda
      dockerfile: Dockerfile.dev
    container_name: votekit-lambda-dev
    volumes:
      - ./lambda:/app
    ports:
      - "8000:8000"

  infra:
    build:
      context: ./infra
      dockerfile: Dockerfile
    container_name: votekit-infra
    working_dir: /workspace/infra
    command: sh -lc "pulumi login s3://votekit-frontend-pulumi-backend && (pulumi stack select dev || pulumi stack init dev) && pulumi up --yes --stack dev"
    volumes:
      - ./:/workspace
      - /var/run/docker.sock:/var/run/docker.sock
      # Add Docker build cache volume to avoid registry authentication issues
      - docker-build-cache:/var/lib/docker
    env_file:
      - ./infra/.env
    environment:
      - PULUMI_HOME=/workspace/infra/.pulumi
      - AWS_DEFAULT_REGION=us-east-2
      # Disable Docker buildkit to avoid cache issues on ARM
      - DOCKER_BUILDKIT=0
      - COMPOSE_DOCKER_CLI_BUILD=0
    depends_on: []

volumes:
  docker-build-cache:
